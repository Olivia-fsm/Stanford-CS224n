(function(_ds){var window=this;'use strict';var y0=function(a,b){var c=0,d=0,e=[0];a.filter(function(g){return 0<g.ea}).forEach(function(g){c+g.ea<=b?c+=g.ea:(c=g.ea,e.push(d));d+=g.ea});return e},z0=function(){this.ra=0;this.ea=[];this.Ca=[];this.ya=this.xa=0},A0=function(){},B0=function(a,b,c,d,e){var g=a.getBoundingClientRect().width;0===g&&32>d?window.requestAnimationFrame(function(){B0(a,b,c,d+1,e)}):32<=d?c("Exceeded max paint retries."):b(g)},C0=function(a){var b=void 0===b?32:b;return new Promise(function(c,d){B0(a,c,d,
0,b)})},F0=function(){var a=_ds.Wy.call(this)||this;a.eb=new _ds.sv;a.element=a;a.ib=A0;a.render=_ds.to;a.Ja=function(b){var c=a.state.oa;c+="right"===b.detail?1:-1;D0(a,a.state.ea,c)};a.state=new z0;a.Da=a.element.querySelector(".devsite-tabs-wrapper");a.Da.style.setProperty("--scroll-animation-duration","250ms");a.Ya=a.element.attachShadow({mode:"open"});E0(a);a.element.querySelectorAll(".devsite-tabs-dropdown a").forEach(function(b){b.addEventListener("click",function(){_ds.Wy.prototype.sf.call(a)})});
return a},E0=function(a){_ds.Vm(a,function c(){var d=this;return _ds.Ka(c,function(e){if(1==e.ea)return _ds.x(e,G0(d,d.state),2);document.body.dispatchEvent(new CustomEvent("cloud-tabs-loaded"));_ds.y(e)})})},D0=function(a,b,c){return _ds.Vm(a,function e(){var g=this;return _ds.Ka(e,function(h){g.state.Ba=-b[c];g.state.oa=c;return _ds.x(h,G0(g,g.state),0)})})},G0=function(a,b){return _ds.Vm(a,function d(){var e=this,g;return _ds.Ka(d,function(h){if(1==h.ea)return _ds.x(h,H0(e,b),2);g=_ds.vo(I0,0<
b.oa?"visible":"",b.oa<b.ea.length-1?"visible":"");e.render(g,e.Ya);_ds.y(h)})})},H0=function(a,b){return _ds.Vm(a,function d(){var e=this,g,h;return _ds.Ka(d,function(k){g=e;h=new Promise(function(l){g.Da.style.setProperty("--scroll-offset",b.Ba+"px");window.setTimeout(function(){l()},250)});return k.return(h)})})};
_ds.m.Object.defineProperties(z0.prototype,{oa:{configurable:!0,enumerable:!0,get:function(){return this.xa},set:function(a){0>a?a=0:a>this.ea.length-1&&(a=this.ea.length-1);this.xa=a}},Ba:{configurable:!0,enumerable:!0,set:function(a){0<a&&(a=0);this.ya=a},get:function(){return this.ya}}});var I0=_ds.p(["\n      <style>\n        .overflow-cover {\n          background-color: white;\n          height: 100%;\n          position: absolute;\n          top: 0;\n          z-index: 100;\n        }\n\n        .overflow-cover.left-overflow {\n          left: -360px;\n          width: 360px;\n        }\n\n        .overflow-cover.right-overflow {\n          right: -710px;\n          width: 700px;\n        }\n\n        button.scroll-button {\n          background-color: white;\n          border: none;\n          color: var(--scroll-button-color);\n          cursor: pointer;\n          display: none;\n          font-family: 'Material Icons';\n          /* Make these buttons take up the same vertical space as a normal full\n          line of text. (since they will be sitting next to text). */\n          font-size: var(--scroll-button-font-size);\n          height: 100%;\n          padding: 0;\n          position: absolute;\n          top: 0;\n          z-index: 101;\n        }\n\n        button.scroll-button:hover,\n        button.scroll-button:focus {\n            color: var(--scroll-button-hover-color);\n            outline: none;\n        }\n\n        button.scroll-button.scroll-left {\n          /* Pull the left scroll button slightly behind the content so that it\n          doesn't sit too close to text. */\n          left: -8px;\n        }\n\n        button.scroll-button.scroll-left::after {\n          content: 'chevron_left';\n        }\n\n        button.scroll-button.scroll-right {\n          /* Pull the right scroll button slightly ahead of content so that it\n          doesn't sit too close to text. */\n          right: -8px;\n        }\n\n        button.scroll-button.scroll-right::after {\n          content: 'chevron_right';\n        }\n\n        button.scroll-button.visible {\n          display: block;\n        }\n      </style>\n      <div class=\"overflow-cover left-overflow\"></div>\n      <button class=\"scroll-button scroll-left ",
"\"\n              onclick=\"this.dispatchEvent(new CustomEvent('scroll-nav',\n                          {bubbles: true, composed: true, detail: 'left'}))\">\n      </button>\n      <slot></slot>\n      <button class=\"scroll-button scroll-right ",'"\n              onclick="this.dispatchEvent(new CustomEvent(\'scroll-nav\',\n                          {bubbles: true, composed: true, detail: \'right\'}))">\n      </button>\n      <div class="overflow-cover right-overflow"></div>\n    ']);_ds.v(F0,_ds.Wy);_ds.f=F0.prototype;_ds.f.Zo=function(a){_ds.Wy.prototype.Zo.call(this,a);a=a.target;"globalNav"===a.getAttribute("track-type")&&(a={event:"concordEvent",name:a.getAttribute("track-name")||a.innerText.toLowerCase(),type:"globalNav",metadata:{eventDetail:"nav",position:"nav"}},_ds.xv(this.eb,a))};_ds.f.connectedCallback=function(){_ds.Wy.prototype.connectedCallback.call(this);this.element.addEventListener("scroll-nav",this.Ja)};
_ds.f.disconnectedCallback=function(){_ds.Wy.prototype.disconnectedCallback.call(this);this.element.removeEventListener("scroll-nav",this.Ja)};_ds.f.vx=function(a){return a.hasAttribute("generated-tab-menu")};
_ds.f.Tp=function(){_ds.Vm(this,function b(){var c=this,d,e;return _ds.Ka(b,function(g){switch(g.ea){case 1:return _ds.z(g,2),_ds.x(g,C0(c.Da),4);case 4:d=g.oa;if(c.state.ra===d){g.Ha(5);break}c.state.ra=d;e=Array.from(c.element.querySelectorAll("tab"));c.state.Ca=e.map(function(h){return{element:h,ea:h?h.offsetWidth:0}});c.state.ea=y0(c.state.Ca,c.state.ra);return _ds.x(g,D0(c,c.state.ea,0),5);case 5:_ds.wa(g,0);break;case 2:return _ds.B(g),_ds.x(g,D0(c,c.state.ea,0),0)}})})};try{window.customElements.define("cloudx-tabs-nav",F0)}catch(a){console.warn("devsite.app.tenants.cloud.static.components.CloudxTabsNav",a)};})(_ds_www);
